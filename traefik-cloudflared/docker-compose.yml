networks:
  traefik_tunnel:
    name: traefik-tunnel
  traefik_apps:
    name: traefik-apps

services:
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt/:/letsencrypt
    env_file: .env
    command:
      - --ping=true
      - --api.dashboard=true
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.cloudflare.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
    networks:
      - traefik_tunnel
      - traefik_apps
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO- --timeout=5 http://127.0.0.1:8080/ping | grep -q OK || exit 1",
        ]
      interval: 30s
      timeout: 10s
      start_period: 20s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=cloudflare"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${DASHBOARD_AUTH}"

  cloudflared:
    container_name: cfd-tunnel
    image: cloudflare/cloudflared:latest
    restart: unless-stopped
    command: tunnel --metrics 127.0.0.1:60123 --no-autoupdate run --token ${CF_TUNNEL_TOKEN}
    networks:
      - traefik_tunnel
    healthcheck:
      test:
        [
          "CMD",
          "cloudflared",
          "tunnel",
          "--metrics",
          "127.0.0.1:60123",
          "ready",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
